{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.field = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        });\n        this.initialState = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        });\n        this.status = \"idle\";\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"randomCell\",\n            value: function randomCell() {\n                var row = 0;\n                var col = 0;\n                var value = 2;\n                for(var i = 0; i < 1; i++){\n                    row = Math.floor(Math.random() * 4);\n                    col = Math.floor(Math.random() * 4);\n                    var cell = [\n                        row,\n                        col\n                    ];\n                    var subValue = Math.floor(Math.random() * 100);\n                    if (subValue > 89) value = 4;\n                    else value = 2;\n                    if (this.field[cell[0]][cell[1]] === 0) this.field[cell[0]][cell[1]] = value;\n                    else i--;\n                }\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var copy = this.field.map(function(row) {\n                    return row.map(function(el) {\n                        return el;\n                    });\n                });\n                var stat = this.getStatus();\n                if (stat === \"playing\") {\n                    for(var x = 0; x <= this.field.length - 1; x++)for(var y = 0; y < this.field.length - 1; y++){\n                        for(var xX = 0; xX <= this.field.length - 1; xX++)for(var yY = 0; yY < this.field.length - 1;){\n                            var cur = this.field[xX][yY];\n                            var nextCur = this.field[xX][yY + 1];\n                            if (cur === 0 && nextCur > 0) {\n                                this.field[xX][yY] = this.field[xX][yY + 1];\n                                this.field[xX][yY + 1] = 0;\n                                yY = 0;\n                            } else yY++;\n                        }\n                        var current = this.field[x][y];\n                        var next = this.field[x][y + 1];\n                        if (current === next) {\n                            this.field[x][y] *= 2;\n                            this.score += this.field[x][y];\n                            this.field[x][y + 1] = 0;\n                        }\n                    }\n                }\n                var newState = this.getState();\n                if (JSON.stringify(copy) !== JSON.stringify(newState)) this.randomCell();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var copy = this.field.map(function(row) {\n                    return row.map(function(el) {\n                        return el;\n                    });\n                });\n                var stat = this.getStatus();\n                if (stat === \"playing\") {\n                    for(var x = 0; x <= this.field.length - 1; x++)for(var y = this.field.length - 1; y > 0; y--){\n                        for(var xX = 0; xX <= this.field.length - 1; xX++)for(var yY = this.field.length - 1; yY > 0;){\n                            var cur = this.field[xX][yY];\n                            var nextCur = this.field[xX][yY - 1];\n                            if (cur === 0 && nextCur > 0) {\n                                this.field[xX][yY] = this.field[xX][yY - 1];\n                                this.field[xX][yY - 1] = 0;\n                                yY = this.field.length - 1;\n                            } else yY--;\n                        }\n                        var current = this.field[x][y];\n                        var next = this.field[x][y - 1];\n                        if (current === next) {\n                            this.field[x][y] *= 2;\n                            this.score += this.field[x][y];\n                            this.field[x][y - 1] = 0;\n                        }\n                    }\n                }\n                var newState = this.getState();\n                if (JSON.stringify(copy) !== JSON.stringify(newState)) this.randomCell();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var copy = this.field.map(function(row) {\n                    return row.map(function(el) {\n                        return el;\n                    });\n                });\n                var stat = this.getStatus();\n                if (stat === \"playing\") {\n                    for(var y = 0; y < this.field.length; y++)for(var x = 0; x < this.field.length - 1; x++){\n                        for(var yY = 0; yY < this.field.length; yY++)for(var xX = 0; xX < this.field.length - 1;){\n                            var cur = this.field[xX][yY];\n                            var nextCur = this.field[xX + 1][yY];\n                            if (cur === 0 && nextCur > 0) {\n                                this.field[xX][yY] = this.field[xX + 1][yY];\n                                this.field[xX + 1][yY] = 0;\n                                xX = 0;\n                            } else xX++;\n                        }\n                        var current = this.field[x][y];\n                        var next = this.field[x + 1][y];\n                        if (current === next) {\n                            this.field[x][y] *= 2;\n                            this.score += this.field[x][y];\n                            this.field[x + 1][y] = 0;\n                        }\n                    }\n                }\n                var newState = this.getState();\n                if (JSON.stringify(copy) !== JSON.stringify(newState)) this.randomCell();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var copy = this.field.map(function(row) {\n                    return row.map(function(el) {\n                        return el;\n                    });\n                });\n                var stat = this.getStatus();\n                if (stat === \"playing\") {\n                    for(var y = this.field.length - 1; y >= 0; y--)for(var x = this.field.length - 1; x > 0; x--){\n                        for(var yY = this.field.length - 1; yY >= 0; yY--)for(var xX = this.field.length - 1; xX > 0;){\n                            var cur = this.field[xX][yY];\n                            var nextCur = this.field[xX - 1][yY];\n                            if (cur === 0 && nextCur > 0) {\n                                this.field[xX][yY] = this.field[xX - 1][yY];\n                                this.field[xX - 1][yY] = 0;\n                                xX = this.field.length - 1;\n                            } else xX--;\n                        }\n                        var current = this.field[x][y];\n                        var next = this.field[x - 1][y];\n                        if (current === next) {\n                            this.field[x][y] *= 2;\n                            this.score += this.field[x][y];\n                            this.field[x - 1][y] = 0;\n                        }\n                    }\n                }\n                var newState = this.getState();\n                if (JSON.stringify(copy) !== JSON.stringify(newState)) this.randomCell();\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.field;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"canMove\",\n            value: function canMove() {\n                for(var x = 0; x <= 3; x++)for(var y = 0; y < 3; y++){\n                    if (this.field[x][y] === this.field[x][y + 1]) return true;\n                }\n                for(var y1 = 0; y1 <= 3; y1++)for(var x1 = 0; x1 < 3; x1++){\n                    if (this.field[x1][y1] === this.field[x1 + 1][y1]) return true;\n                }\n                for(var y2 = 0; y2 <= 3; y2++)for(var x2 = 0; x2 < 3; x2++){\n                    if (this.field[x2][y2] === 0) return true;\n                }\n            }\n        },\n        {\n            key: \"isWin\",\n            value: function isWin() {\n                for(var x = 0; x < this.field.length; x++)for(var y = 0; y < this.field.length; y++){\n                    if (this.field[x][y] >= 2048) return true;\n                }\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                if (!this.canMove()) this.status = \"lose\";\n                if (this.isWin()) this.status = \"win\";\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                var value = 2;\n                var row = 0;\n                var col = 0;\n                for(var i = 0; i < 2; i++){\n                    row = Math.floor(Math.random() * 4);\n                    col = Math.floor(Math.random() * 4);\n                    var newCell = [\n                        row,\n                        col\n                    ];\n                    if (this.field[newCell[0]][newCell[1]] === 0) {\n                        var subValue = Math.floor(Math.random() * 100);\n                        if (subValue > 89) value = 4;\n                        else value = 2;\n                        this.field[newCell[0]][newCell[1]] = value;\n                    } else i--;\n                }\n                this.status = \"playing\";\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart(initialState) {\n                this.status = \"idle\";\n                this.score = 0;\n                this.field = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$start = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$gameField = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$scoreWindow = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\n$197cd56b15c33885$var$start.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$start.classList.contains(\"restart\")) {\n        $197cd56b15c33885$var$start.textContent = \"Restart\";\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n            $197cd56b15c33885$var$gameField.rows[i].cells[j].classList.remove(\"field-cell--\".concat($197cd56b15c33885$var$game.field[i][j]));\n            $197cd56b15c33885$var$gameField.rows[i].cells[j].textContent = \"\";\n        }\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$scoreWindow.textContent = $197cd56b15c33885$var$game.getScore();\n        $197cd56b15c33885$var$game.start();\n        for(var x = 0; x < 4; x++){\n            for(var y = 0; y < 4; y++)if ($197cd56b15c33885$var$game.field[x][y] !== 0) {\n                $197cd56b15c33885$var$gameField.rows[x].cells[y].classList.add(\"field-cell--\".concat($197cd56b15c33885$var$game.field[x][y]));\n                $197cd56b15c33885$var$gameField.rows[x].cells[y].textContent = $197cd56b15c33885$var$game.field[x][y];\n            }\n        }\n    } else {\n        $197cd56b15c33885$var$start.classList.add(\"restart\");\n        $197cd56b15c33885$var$start.textContent = \"Restart\";\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$game.start();\n        for(var x1 = 0; x1 < 4; x1++){\n            for(var y1 = 0; y1 < 4; y1++)if ($197cd56b15c33885$var$game.field[x1][y1] !== 0) {\n                $197cd56b15c33885$var$gameField.rows[x1].cells[y1].classList.add(\"field-cell--\".concat($197cd56b15c33885$var$game.field[x1][y1]));\n                $197cd56b15c33885$var$gameField.rows[x1].cells[y1].textContent = $197cd56b15c33885$var$game.field[x1][y1];\n            }\n        }\n    }\n});\nfunction $197cd56b15c33885$var$createGameField() {\n    for(var x = 0; x < $197cd56b15c33885$var$game.field.length; x++)for(var y = 0; y < $197cd56b15c33885$var$game.field.length; y++){\n        $197cd56b15c33885$var$gameField.rows[x].cells[y].classList.remove(\"field-cell--\".concat($197cd56b15c33885$var$gameField.rows[x].cells[y].textContent));\n        $197cd56b15c33885$var$gameField.rows[x].cells[y].textContent = \"\";\n        if ($197cd56b15c33885$var$game.field[x][y] !== 0) {\n            $197cd56b15c33885$var$gameField.rows[x].cells[y].textContent = $197cd56b15c33885$var$game.field[x][y];\n            $197cd56b15c33885$var$gameField.rows[x].cells[y].classList.add(\"field-cell--\".concat($197cd56b15c33885$var$game.field[x][y]));\n        }\n    }\n    $197cd56b15c33885$var$scoreWindow.textContent = $197cd56b15c33885$var$game.score;\n}\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() === \"playing\") {\n        switch(e.key){\n            case \"ArrowUp\":\n                $197cd56b15c33885$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                $197cd56b15c33885$var$game.moveDown();\n                break;\n            case \"ArrowRight\":\n                $197cd56b15c33885$var$game.moveRight();\n                break;\n            case \"ArrowLeft\":\n                $197cd56b15c33885$var$game.moveLeft();\n                break;\n        }\n        $197cd56b15c33885$var$createGameField();\n    }\n    if ($197cd56b15c33885$var$game.getStatus() === \"win\") $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    if ($197cd56b15c33885$var$game.getStatus() === \"lose\") $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n});\n\n})();\n//# sourceMappingURL=index.bae4ea5e.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst start = document.querySelector('.start');\nconst gameField = document.querySelector('.game-field');\nconst messageStart = document.querySelector('.message-start');\nconst scoreWindow = document.querySelector('.game-score');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\nstart.addEventListener('click', () => {\n  if (start.classList.contains('restart')) {\n    start.textContent = 'Restart';\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        gameField.rows[i].cells[j].classList\n          .remove(`field-cell--${game.field[i][j]}`);\n        gameField.rows[i].cells[j].textContent = '';\n      }\n    }\n\n    game.restart();\n\n    scoreWindow.textContent = game.getScore();\n\n    game.start();\n\n    for (let x = 0; x < 4; x++) {\n      for (let y = 0; y < 4; y++) {\n        if (game.field[x][y] !== 0) {\n          gameField.rows[x].cells[y]\n            .classList.add(`field-cell--${game.field[x][y]}`);\n          gameField.rows[x].cells[y].textContent = game.field[x][y];\n        }\n      }\n    }\n  } else {\n    start.classList.add('restart');\n    start.textContent = 'Restart';\n    messageStart.classList.add('hidden');\n    game.start();\n\n    for (let x = 0; x < 4; x++) {\n      for (let y = 0; y < 4; y++) {\n        if (game.field[x][y] !== 0) {\n          gameField.rows[x].cells[y]\n            .classList.add(`field-cell--${game.field[x][y]}`);\n          gameField.rows[x].cells[y].textContent = game.field[x][y];\n        }\n      }\n    }\n  }\n});\n\nfunction createGameField() {\n  for (let x = 0; x < game.field.length; x++) {\n    for (let y = 0; y < game.field.length; y++) {\n      gameField.rows[x].cells[y].classList\n        .remove(`field-cell--${gameField.rows[x].cells[y].textContent}`);\n      gameField.rows[x].cells[y].textContent = '';\n\n      if (game.field[x][y] !== 0) {\n        gameField.rows[x].cells[y].textContent = game.field[x][y];\n\n        gameField.rows[x].cells[y]\n          .classList.add(`field-cell--${game.field[x][y]}`);\n      }\n    }\n  }\n  scoreWindow.textContent = game.score;\n}\n\ndocument.addEventListener('keydown', e => {\n  if (game.getStatus() === 'playing') {\n    switch (e.key) {\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n    }\n\n    createGameField();\n  }\n\n  if (game.getStatus() === 'win') {\n    messageWin.classList.remove('hidden');\n  }\n\n  if (game.getStatus() === 'lose') {\n    messageLose.classList.remove('hidden');\n  }\n});\n","'use strict';\n\nclass Game {\n  /**\n* Creates a new game instance.\n*\n* @param {number[][]} initialState\n* The initial state of the board.\n* @default\n* [[0, 0, 0, 0],\n*  [0, 0, 0, 0],\n*  [0, 0, 0, 0],\n*  [0, 0, 0, 0]]\n*\n* If passed, the board will be initialized with the provided\n* initial state.\n*/\n  constructor(initialState = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0]]) {\n    this.field = initialState.map(row => [...row]);\n    this.initialState = initialState.map(row => [...row]);\n    this.status = 'idle';\n    this.score = 0;\n  }\n\n  randomCell() {\n    let row = 0;\n    let col = 0;\n    let value = 2;\n\n    for (let i = 0; i < 1; i++) {\n      row = Math.floor(Math.random() * 4);\n      col = Math.floor(Math.random() * 4);\n\n      const cell = [row, col];\n\n      const subValue = Math.floor(Math.random() * 100);\n\n      if (subValue > 89) {\n        value = 4;\n      } else {\n        value = 2;\n      }\n\n      if (this.field[cell[0]][cell[1]] === 0) {\n        this.field[cell[0]][cell[1]] = value;\n      } else {\n        i--;\n      }\n    }\n  };\n\n  moveLeft() {\n    const copy = this.field.map(row => row.map(el => el));\n    const stat = this.getStatus();\n\n    if (stat === 'playing') {\n      for (let x = 0; x <= this.field.length - 1; x++) {\n        for (let y = 0; y < this.field.length - 1; y++) {\n          for (let xX = 0; xX <= this.field.length - 1; xX++) {\n            for (let yY = 0; yY < this.field.length - 1;) {\n              const cur = this.field[xX][yY];\n              const nextCur = this.field[xX][yY + 1];\n\n              if (cur === 0 && nextCur > 0) {\n                this.field[xX][yY] = this.field[xX][yY + 1];\n                this.field[xX][yY + 1] = 0;\n                yY = 0;\n              } else {\n                yY++;\n              }\n            }\n          }\n\n          const current = this.field[x][y];\n          const next = this.field[x][y + 1];\n\n          if (current === next) {\n            this.field[x][y] *= 2;\n            this.score += this.field[x][y];\n            this.field[x][y + 1] = 0;\n          }\n        }\n      }\n    }\n\n    const newState = this.getState();\n\n    if (JSON.stringify(copy) !== JSON.stringify(newState)) {\n      this.randomCell();\n    }\n  }\n\n  moveRight() {\n    const copy = this.field.map(row => row.map(el => el));\n    const stat = this.getStatus();\n\n    if (stat === 'playing') {\n      for (let x = 0; x <= this.field.length - 1; x++) {\n        for (let y = this.field.length - 1; y > 0; y--) {\n          for (let xX = 0; xX <= this.field.length - 1; xX++) {\n            for (let yY = this.field.length - 1; yY > 0;) {\n              const cur = this.field[xX][yY];\n              const nextCur = this.field[xX][yY - 1];\n\n              if (cur === 0 && nextCur > 0) {\n                this.field[xX][yY] = this.field[xX][yY - 1];\n                this.field[xX][yY - 1] = 0;\n                yY = this.field.length - 1;\n              } else {\n                yY--;\n              }\n            }\n          }\n\n          const current = this.field[x][y];\n          const next = this.field[x][y - 1];\n\n          if (current === next) {\n            this.field[x][y] *= 2;\n            this.score += this.field[x][y];\n            this.field[x][y - 1] = 0;\n          }\n        }\n      }\n    }\n\n    const newState = this.getState();\n\n    if (JSON.stringify(copy) !== JSON.stringify(newState)) {\n      this.randomCell();\n    }\n  }\n\n  moveUp() {\n    const copy = this.field.map(row => row.map(el => el));\n    const stat = this.getStatus();\n\n    if (stat === 'playing') {\n      for (let y = 0; y < this.field.length; y++) {\n        for (let x = 0; x < this.field.length - 1; x++) {\n          for (let yY = 0; yY < this.field.length; yY++) {\n            for (let xX = 0; xX < this.field.length - 1;) {\n              const cur = this.field[xX][yY];\n              const nextCur = this.field[xX + 1][yY];\n\n              if (cur === 0 && nextCur > 0) {\n                this.field[xX][yY] = this.field[xX + 1][yY];\n                this.field[xX + 1][yY] = 0;\n                xX = 0;\n              } else {\n                xX++;\n              }\n            }\n          }\n\n          const current = this.field[x][y];\n          const next = this.field[x + 1][y];\n\n          if (current === next) {\n            this.field[x][y] *= 2;\n            this.score += this.field[x][y];\n            this.field[x + 1][y] = 0;\n          }\n        }\n      }\n    }\n\n    const newState = this.getState();\n\n    if (JSON.stringify(copy) !== JSON.stringify(newState)) {\n      this.randomCell();\n    }\n  }\n\n  moveDown() {\n    const copy = this.field.map(row => row.map(el => el));\n    const stat = this.getStatus();\n\n    if (stat === 'playing') {\n      for (let y = this.field.length - 1; y >= 0; y--) {\n        for (let x = this.field.length - 1; x > 0; x--) {\n          for (let yY = this.field.length - 1; yY >= 0; yY--) {\n            for (let xX = this.field.length - 1; xX > 0;) {\n              const cur = this.field[xX][yY];\n              const nextCur = this.field[xX - 1][yY];\n\n              if (cur === 0 && nextCur > 0) {\n                this.field[xX][yY] = this.field[xX - 1][yY];\n                this.field[xX - 1][yY] = 0;\n                xX = this.field.length - 1;\n              } else {\n                xX--;\n              }\n            }\n          }\n\n          const current = this.field[x][y];\n          const next = this.field[x - 1][y];\n\n          if (current === next) {\n            this.field[x][y] *= 2;\n            this.score += this.field[x][y];\n            this.field[x - 1][y] = 0;\n          }\n        }\n      }\n    }\n\n    const newState = this.getState();\n\n    if (JSON.stringify(copy) !== JSON.stringify(newState)) {\n      this.randomCell();\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.field;\n  };\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n\n  canMove() {\n    for (let x = 0; x <= 3; x++) {\n      for (let y = 0; y < 3; y++) {\n        if (this.field[x][y] === this.field[x][y + 1]) {\n          return true;\n        }\n      }\n    }\n\n    for (let y = 0; y <= 3; y++) {\n      for (let x = 0; x < 3; x++) {\n        if (this.field[x][y] === this.field[x + 1][y]) {\n          return true;\n        }\n      }\n    }\n\n    for (let y = 0; y <= 3; y++) {\n      for (let x = 0; x < 3; x++) {\n        if (this.field[x][y] === 0) {\n          return true;\n        }\n      }\n    }\n  }\n\n  isWin() {\n    for (let x = 0; x < this.field.length; x++) {\n      for (let y = 0; y < this.field.length; y++) {\n        if (this.field[x][y] >= 2048) {\n          return true;\n        }\n      }\n    }\n  }\n\n  getStatus() {\n    if (!this.canMove()) {\n      this.status = 'lose';\n    }\n\n    if (this.isWin()) {\n      this.status = 'win';\n    }\n\n    return this.status;\n  }\n\n  start() {\n    let value = 2;\n    let row = 0;\n    let col = 0;\n\n    for (let i = 0; i < 2; i++) {\n      row = Math.floor(Math.random() * 4);\n      col = Math.floor(Math.random() * 4);\n\n      const newCell = [row, col];\n\n      if (this.field[newCell[0]][newCell[1]] === 0) {\n        const subValue = Math.floor(Math.random() * 100);\n\n        if (subValue > 89) {\n          value = 4;\n        } else {\n          value = 2;\n        }\n\n        this.field[newCell[0]][newCell[1]] = value;\n      } else {\n        i--;\n      }\n    }\n\n    this.status = 'playing';\n  }\n\n  restart(initialState) {\n    this.status = 'idle';\n    this.score = 0;\n    this.field = this.initialState.map(row => [...row]);\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","staticProps","Game","initialState","arguments","instance","Constructor","field","map","row","status","score","value","cell","Math","floor","random","subValue","copy","el","stat","getStatus","x","y","xX","yY","cur","nextCur","newState","getState","JSON","stringify","randomCell","y1","x1","y2","x2","canMove","isWin","newCell","$197cd56b15c33885$var$start","document","querySelector","$197cd56b15c33885$var$gameField","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$scoreWindow","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","addEventListener","classList","contains","textContent","add","j","rows","cells","remove","concat","restart","getScore","start","e","moveUp","moveDown","moveRight","moveLeft","$197cd56b15c33885$var$createGameField"],"version":3,"file":"index.bae4ea5e.js.map"}